package ch.bbw.zork;import java.util.HashMap;public class Room {	private String description;	private HashMap<String, Room> exits;	private HashMap<String, Item> items; // New field to hold items in the room	public Room(String description) {		this.description = description;		this.exits = new HashMap<>();		this.items = new HashMap<>(); // Initialize the items HashMap	}	public void put(Room north, Room east, Room south, Room west) {		if (north != null) {			exits.put("north", north);		}		if (east != null) {			exits.put("east", east);		}		if (south != null) {			exits.put("south", south);		}		if (west != null) {			exits.put("west", west);		}	}	public void addItem(Item item) {		items.put(item.getDescription(), item);	}	public String shortDescription() {		return description;	}	public String longDescription() {		StringBuilder tempStr = new StringBuilder("You are in " + description + ".\n");		tempStr.append("Items in this room:\n");		tempStr.append(getItemsString()); // Display items in the room		tempStr.append(exitString());		return tempStr.toString();	}	String getItemsString() {		StringBuilder itemsString = new StringBuilder();		for (Item item : items.values()) {			itemsString.append("- ").append(item.getDescription()).append("\n");		}		return itemsString.toString();	}	private String exitString() {		StringBuilder returnString = new StringBuilder("Exits:");		for (String key : exits.keySet()) {			returnString.append(" ").append(key);		}		return returnString.toString();	}	public Room nextRoom(String direction) {		return exits.get(direction);	}	public Item getItem(String itemDescription) {		return items.get(itemDescription);	}	public void removeItem(String itemDescription) {		items.remove(itemDescription);	}}